@import "tailwindcss";

:root {
  --background: #ffffff;
  --foreground: #171717;
}

@theme inline {
  --color-background: var(--background);
  --color-foreground: var(--foreground);
  --font-sans: var(--font-geist-sans);
  --font-mono: var(--font-geist-mono);
}

@media (prefers-color-scheme: dark) {
  :root {
    --background: #0a0a0a;
    --foreground: #ededed;
  }
}

body {
  background: var(--background);
  color: var(--foreground);
  font-family: Arial, Helvetica, sans-serif;
}

.purple-space {
  background: 
    /* Planetarium dome curvature effect */ radial-gradient(
      ellipse 2000px 1200px at 50% 30%,
      rgba(20, 20, 40, 0.8) 0%,
      rgba(15, 15, 35, 0.9) 30%,
      rgba(10, 10, 25, 0.95) 60%,
      rgba(5, 5, 15, 1) 100%
    ),
    /* Deep space nebula layers */
      radial-gradient(
        1800px 1000px at 20% 20%,
        rgba(124, 58, 237, 0.25),
        rgba(80, 40, 180, 0.15) 40%,
        transparent 70%
      ),
    radial-gradient(
      1600px 800px at 80% 30%,
      rgba(147, 51, 234, 0.2),
      rgba(100, 30, 200, 0.12) 50%,
      transparent 75%
    ),
    radial-gradient(
      1400px 600px at 60% 80%,
      rgba(99, 102, 241, 0.18),
      rgba(70, 70, 160, 0.1) 45%,
      transparent 70%
    ),
    /* Atmospheric depth gradient */
      radial-gradient(
        circle 1500px at 50% 50%,
        rgba(30, 30, 60, 0.3) 0%,
        rgba(20, 20, 45, 0.5) 40%,
        rgba(10, 10, 30, 0.8) 70%,
        rgba(5, 5, 15, 1) 100%
      ),
    /* Base deep space */
      linear-gradient(
        135deg,
        #050510 0%,
        #0a0a1a 25%,
        #0f0f25 50%,
        #1a1a2e 75%,
        #16213e 100%
      );
  position: relative;
  overflow: hidden;
}

/* Additional planetarium dome overlay for extra depth */
.purple-space::after {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: 
    /* Subtle vignette effect for dome curvature */ radial-gradient(
      ellipse 1800px 1000px at 50% 40%,
      transparent 0%,
      transparent 60%,
      rgba(0, 0, 0, 0.1) 80%,
      rgba(0, 0, 0, 0.2) 100%
    ),
    /* Atmospheric glow at edges */
      radial-gradient(
        circle 1200px at 50% 50%,
        transparent 0%,
        transparent 70%,
        rgba(20, 20, 40, 0.1) 85%,
        rgba(10, 10, 20, 0.2) 100%
      );
  pointer-events: none;
  z-index: 1;
}

/* Twinkling stars background */
.purple-space::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-image: radial-gradient(2px 2px at 20px 30px, #eee, transparent),
    radial-gradient(2px 2px at 40px 70px, rgba(255, 255, 255, 0.8), transparent),
    radial-gradient(1px 1px at 90px 40px, #fff, transparent),
    radial-gradient(
      1px 1px at 130px 80px,
      rgba(255, 255, 255, 0.6),
      transparent
    ),
    radial-gradient(2px 2px at 160px 30px, #fff, transparent),
    radial-gradient(
      1px 1px at 200px 90px,
      rgba(255, 255, 255, 0.7),
      transparent
    ),
    radial-gradient(1px 1px at 250px 50px, #fff, transparent),
    radial-gradient(
      2px 2px at 300px 20px,
      rgba(255, 255, 255, 0.8),
      transparent
    ),
    radial-gradient(1px 1px at 350px 80px, #fff, transparent),
    radial-gradient(
      1px 1px at 400px 40px,
      rgba(255, 255, 255, 0.6),
      transparent
    ),
    radial-gradient(2px 2px at 450px 70px, #fff, transparent),
    radial-gradient(
      1px 1px at 500px 30px,
      rgba(255, 255, 255, 0.7),
      transparent
    ),
    radial-gradient(1px 1px at 550px 90px, #fff, transparent),
    radial-gradient(
      2px 2px at 600px 50px,
      rgba(255, 255, 255, 0.8),
      transparent
    ),
    radial-gradient(1px 1px at 650px 20px, #fff, transparent),
    radial-gradient(
      1px 1px at 700px 80px,
      rgba(255, 255, 255, 0.6),
      transparent
    ),
    radial-gradient(2px 2px at 750px 40px, #fff, transparent),
    radial-gradient(
      1px 1px at 800px 70px,
      rgba(255, 255, 255, 0.7),
      transparent
    ),
    radial-gradient(1px 1px at 850px 30px, #fff, transparent),
    radial-gradient(
      2px 2px at 900px 90px,
      rgba(255, 255, 255, 0.8),
      transparent
    );
  background-repeat: repeat;
  background-size: 950px 100px;
  animation: twinkle 4s cubic-bezier(0.17, 0.67, 0.12, 0.99) infinite alternate;
  pointer-events: none;
  z-index: 2;
}

@keyframes twinkle {
  0% {
    opacity: 0.2;
    filter: brightness(1);
  }
  25% {
    opacity: 0.6;
    filter: brightness(1.5);
  }
  50% {
    opacity: 1;
    filter: brightness(3);
  }
  75% {
    opacity: 0.8;
    filter: brightness(2);
  }
  100% {
    opacity: 0.3;
    filter: brightness(1.2);
  }
}

/* Star-shaped nodes */
.star-node {
  background: radial-gradient(
      circle at 30% 30%,
      rgba(255, 255, 255, 0.8),
      transparent 50%
    ),
    radial-gradient(
      circle at 70% 70%,
      rgba(255, 255, 255, 0.6),
      transparent 50%
    ),
    linear-gradient(45deg, #ffd700, #ffed4e, #ffd700);
  border: 2px solid rgba(255, 255, 255, 0.3);
  box-shadow: 0 0 20px rgba(255, 215, 0, 0.4),
    inset 0 0 20px rgba(255, 255, 255, 0.2);
  position: relative;
  overflow: hidden;
}

.star-node::before {
  content: "";
  position: absolute;
  top: 50%;
  left: 50%;
  width: 100%;
  height: 100%;
  background: radial-gradient(
      circle at 20% 20%,
      rgba(255, 255, 255, 0.6),
      transparent 30%
    ),
    radial-gradient(
      circle at 80% 80%,
      rgba(255, 255, 255, 0.4),
      transparent 30%
    );
  transform: translate(-50%, -50%);
  animation: star-shimmer 2s cubic-bezier(0.17, 0.67, 0.12, 0.99) infinite
    alternate;
}

@keyframes star-shimmer {
  0% {
    opacity: 0.3;
  }
  100% {
    opacity: 0.8;
  }
}

/* Brightness animation for spinning stars */
.star-node.spinning {
  animation: star-brightness 0.5s cubic-bezier(0.17, 0.67, 0.12, 0.99) infinite
    alternate;
}

@keyframes star-brightness {
  0% {
    filter: brightness(1) drop-shadow(0 0 15px rgba(255, 215, 0, 0.8));
  }
  100% {
    filter: brightness(2) drop-shadow(0 0 40px rgba(255, 215, 0, 1));
  }
}

/* Home star (center) - larger and more prominent */
.star-node.home {
  background: radial-gradient(
      circle at 30% 30%,
      rgba(255, 255, 255, 0.9),
      transparent 50%
    ),
    radial-gradient(
      circle at 70% 70%,
      rgba(255, 255, 255, 0.7),
      transparent 50%
    ),
    linear-gradient(45deg, #ff6b35, #ffd700, #ff6b35);
  box-shadow: 0 0 30px rgba(255, 107, 53, 0.6), 0 0 60px rgba(255, 215, 0, 0.4),
    inset 0 0 30px rgba(255, 255, 255, 0.3);
}

.star-node.home::before {
  background: radial-gradient(
      circle at 20% 20%,
      rgba(255, 255, 255, 0.8),
      transparent 30%
    ),
    radial-gradient(
      circle at 80% 80%,
      rgba(255, 255, 255, 0.6),
      transparent 30%
    );
}

@keyframes caret {
  50% {
    opacity: 0;
  }
}
.motion-safe\:animate-caret {
  animation: caret 1s steps(1) infinite;
}

.glow {
  text-shadow: 0 6px 24px rgba(124, 58, 237, 0.35),
    0 2px 8px rgba(0, 0, 0, 0.35);
}

/* Radial reveal utilities */
.radial-container {
  position: relative;
}

/* The hero element will carry this class + a data-state attribute */
.radial-reveal {
  /* Circle set via CSS custom properties; default tiny */
  clip-path: circle(
    var(--reveal-r, 0px) at var(--reveal-x, 50%) var(--reveal-y, 50%)
  );
  transition: clip-path 560ms cubic-bezier(0.2, 0.7, 0.2, 1), opacity 240ms ease;
  /* --- Radial reveal performance hint --- */
  will-change: clip-path, opacity;
}

/* Visibility by state */
.radial-reveal[data-state="graph"] {
  opacity: 0;
  pointer-events: none;
}
.radial-reveal[data-state="revealing"] {
  opacity: 1;
}
.radial-reveal[data-state="revealing"] .hero-content {
  opacity: 0 !important;
  visibility: hidden;
  transition: none;
}
.radial-reveal[data-state="hero"] {
  clip-path: none; /* fully revealed */
  opacity: 1;
}
.radial-reveal[data-state="hero"] .hero-content {
  opacity: 1 !important;
  visibility: visible;
  transition: opacity 300ms cubic-bezier(0.17, 0.67, 0.12, 0.99);
}

/* Reduce-motion: no animation, show immediately */
@media (prefers-reduced-motion: reduce) {
  .radial-reveal {
    transition: none !important;
    clip-path: none !important;
  }
  .radial-reveal .hero-content {
    transition: none !important;
    opacity: 1 !important;
  }
}

/* Loading effect for smooth transitions */
.loading-overlay {
  position: absolute;
  inset: 0;
  background: radial-gradient(
    circle at var(--reveal-x, 50%) var(--reveal-y, 50%),
    rgba(124, 58, 237, 0.1) 0%,
    transparent 70%
  );
  pointer-events: none;
  z-index: 15;
  opacity: 0;
  transition: opacity 200ms ease;
}

.loading-overlay.active {
  opacity: 1;
}

/* Satellites spin animation
   We apply the class 'satellites-spin-<key>' to the satellites container to restart this animation. */
[class*="satellites-spin-"] {
  transform: rotate(0deg);
  animation: satellites-spin 7000ms cubic-bezier(0.17, 0.67, 0.12, 0.99);
}

@keyframes satellites-spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

/* Satellites spin animation
   We apply the class 'satellites-spin-<key>' to the satellites container to restart this animation. */
[class*="satellites-spin-"] {
  transform: rotate(0deg);
  animation: satellites-spin 7000ms cubic-bezier(0.17, 0.67, 0.12, 0.99);
}

@keyframes satellites-spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(720deg);
  }
}

/* Continuous hover spin animation */
.satellites-hover-spin {
  animation: satellites-hover-spin 2s linear infinite !important;
  /* Add a subtle visual indicator for debugging */
  box-shadow: inset 0 0 20px rgba(0, 255, 0, 0.3);
}

@keyframes satellites-hover-spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

/* Respect reduced motion */
@media (prefers-reduced-motion: reduce) {
  [class*="satellites-spin-"] {
    animation: none !important;
  }

  .satellites-hover-spin {
    animation: none !important;
  }
}

/* --- Spherical planet look on top of existing positioning --- */
.planetSphere {
  border-radius: 9999px;
  overflow: hidden; /* so highlights don't bleed outside circle */

  /* Base albedo using HSL vars set inline (per-planet), with gentle bands */
  background:
    /* subtle latitude bands */ repeating-linear-gradient(
      0deg,
      hsl(var(--ph) calc(var(--ps)) calc(var(--pl) + 6%)) 0 6px,
      hsl(var(--ph) calc(var(--ps)) calc(var(--pl) + 1%)) 6px 14px
    ),
    radial-gradient(
      120% 120% at 40% 35%,
      hsl(var(--ph) calc(var(--ps)) calc(var(--pl) + 14%)) 0%,
      hsl(var(--ph) calc(var(--ps)) calc(var(--pl) + 4%)) 35%,
      hsl(var(--ph) calc(var(--ps)) calc(var(--pl) - 6%)) 70%,
      hsl(var(--ph) calc(var(--ps)) calc(var(--pl) - 14%)) 100%
    );

  background-blend-mode: soft-light, normal;
  filter: saturate(1.02) contrast(1.02);

  /* The 3D-ish shadows & lights are done with pseudo-elements so text stays above */
}

/* Specular highlight (tiny glossy dot) */
.planetSphere::after {
  content: "";
  position: absolute;
  inset: 0;
  border-radius: 9999px;
  background: radial-gradient(
    circle at 35% 30%,
    rgba(255, 255, 255, calc(0.45 * var(--shine))) 0%,
    rgba(255, 255, 255, calc(0.25 * var(--shine))) 8%,
    rgba(255, 255, 255, 0) 18%
  );
  pointer-events: none;
  mix-blend-mode: screen;
}

/* Terminator (night side) + atmospheric rim light */
.planetSphere::before {
  content: "";
  position: absolute;
  inset: -18%;
  border-radius: 9999px;
  /* night side shadow */
  background: radial-gradient(
      120% 120% at 18% 18%,
      rgba(0, 0, 0, 0) 45%,
      rgba(0, 0, 0, 0.55) 72%,
      rgba(0, 0, 0, 0.78) 100%
    ),
    /* rim light glow */
      radial-gradient(
        100% 100% at 80% 80%,
        rgba(255, 255, 255, calc(0.25 * var(--rim))) 0%,
        rgba(255, 255, 255, 0) 55%
      );
  filter: blur(6px);
  pointer-events: none;
  mix-blend-mode: overlay;
}

/* Slight texture intensity controlled by --tex (0..1) */
.planetSphere {
  --grainA: rgba(255, 255, 255, calc(0.05 * var(--tex)));
  --grainB: rgba(0, 0, 0, calc(0.05 * var(--tex)));
  box-shadow: inset 0 0 22px rgba(0, 0, 0, 0.24),
    inset 8px 10px 20px rgba(255, 255, 255, 0.18);

  /* micro-noise via layered shadows to avoid heavy images */
  background-image: radial-gradient(
      1px 1px at 12% 18%,
      var(--grainA),
      transparent 60%
    ),
    radial-gradient(1px 1px at 78% 66%, var(--grainB), transparent 60%),
    radial-gradient(1px 1px at 44% 82%, var(--grainA), transparent 60%),
    radial-gradient(1px 1px at 66% 28%, var(--grainB), transparent 60%),
    radial-gradient(1px 1px at 32% 52%, var(--grainA), transparent 60%),
    radial-gradient(
      120% 120% at 40% 35%,
      hsl(var(--ph) calc(var(--ps)) calc(var(--pl) + 14%)) 0%,
      hsl(var(--ph) calc(var(--ps)) calc(var(--pl) + 4%)) 35%,
      hsl(var(--ph) calc(var(--ps)) calc(var(--pl) - 6%)) 70%,
      hsl(var(--ph) calc(var(--ps)) calc(var(--pl) - 14%)) 100%
    );
  background-blend-mode: overlay, overlay, overlay, overlay, overlay, normal;
}

/* Keep your existing .planet3d transform logic (do not touch) */
/* .planet3d {... transforms using --base/--rotBase/--rot ...} remains intact */

/* ------------- Vibrant animated cosmos background ------------- */
/* Apply to <main class="cosmos-bg"> */

.cosmos-bg {
  position: relative;
  overflow: clip;
  background: radial-gradient(
      1200px 700px at 20% 10%,
      #3a246b 0%,
      #1a1433 35%,
      #0b0a19 100%
    ),
    radial-gradient(
      900px 600px at 78% 85%,
      rgba(90, 40, 120, 0.35) 0%,
      rgba(20, 10, 40, 0) 58%
    ),
    radial-gradient(
      700px 500px at 15% 80%,
      rgba(30, 110, 160, 0.25) 0%,
      rgba(10, 10, 25, 0) 60%
    );
  background-attachment: fixed;
}

/* Starfield layers (twinkle) */
.cosmos-bg::before,
.cosmos-bg::after {
  content: "";
  position: absolute;
  inset: 0;
  pointer-events: none;
}

.cosmos-bg::before {
  /* small stars */
  background-image: radial-gradient(
      1px 1px at 10% 20%,
      rgba(255, 255, 255, 0.9),
      transparent 50%
    ),
    radial-gradient(
      1px 1px at 30% 70%,
      rgba(255, 255, 255, 0.7),
      transparent 50%
    ),
    radial-gradient(
      1px 1px at 55% 35%,
      rgba(255, 255, 255, 0.8),
      transparent 50%
    ),
    radial-gradient(
      1.5px 1.5px at 82% 24%,
      rgba(255, 240, 200, 0.8),
      transparent 55%
    ),
    radial-gradient(
      1px 1px at 70% 80%,
      rgba(190, 210, 255, 0.85),
      transparent 55%
    ),
    radial-gradient(
      1px 1px at 45% 88%,
      rgba(255, 255, 255, 0.9),
      transparent 55%
    ),
    radial-gradient(
      1px 1px at 15% 55%,
      rgba(210, 230, 255, 0.75),
      transparent 55%
    );
  animation: twinkle 6s ease-in-out infinite alternate;
  opacity: 0.8;
}

.cosmos-bg::after {
  /* slow galaxy/nebula swirl (soft conic gradients + blur) */
  background: conic-gradient(
    from 20deg at 65% 60%,
    rgba(140, 90, 255, 0.12),
    rgba(255, 200, 180, 0.08),
    rgba(80, 160, 255, 0.1),
    rgba(140, 90, 255, 0.12)
  );
  filter: blur(48px) saturate(1.15);
  mix-blend-mode: screen;
  transform-origin: 65% 60%;
  animation: swirl 80s linear infinite;
  opacity: 0.7;
}

@keyframes twinkle {
  0% {
    opacity: 0.55;
    filter: brightness(0.9);
  }
  100% {
    opacity: 0.95;
    filter: brightness(1.15);
  }
}

@keyframes swirl {
  from {
    transform: rotate(0deg) scale(1);
  }
  to {
    transform: rotate(360deg) scale(1);
  }
}

/* Accessibility: reduce motion — keep richness but stop movement */
@media (prefers-reduced-motion: reduce) {
  .cosmos-bg::after {
    animation: none;
  }
  .cosmos-bg::before {
    animation: none;
  }
}

/* ====== Cinematic Cosmos Background (no layout changes) ====== */
/* Parallax intensity (tweak as desired) */
:root {
  --parx: 0; /* updated by Cosmos3D */
  --pary: 0;
  --parallax-deep: 10px;
  --parallax-mid: 20px;
  --parallax-near: 35px;
}

/* Container */
.cosmos3d {
  isolation: isolate;
  overflow: hidden;
  background: radial-gradient(
      1400px 800px at 20% 8%,
      #0a0a0a 0%,
      #080808 40%,
      #050505 100%
    ),
    radial-gradient(
      900px 600px at 78% 85%,
      rgba(15, 10, 20, 0.15) 0%,
      rgba(0, 0, 0, 0) 60%
    );
  background-attachment: fixed;
}

/* Generic layer base */
.cosmos3d .layer {
  position: absolute;
  inset: 0;
  will-change: transform, opacity, filter;
}

/* ---------- Stars (procedural dots via radial-gradients) ---------- */
@keyframes twinkleA {
  0% {
    opacity: 0.4;
    filter: brightness(1);
  }
  100% {
    opacity: 1;
    filter: brightness(5);
  }
}
@keyframes twinkleB {
  0% {
    opacity: 0.3;
    filter: brightness(1);
  }
  100% {
    opacity: 1;
    filter: brightness(4.5);
  }
}
@keyframes twinkleC {
  0% {
    opacity: 0.5;
    filter: brightness(1.2);
  }
  100% {
    opacity: 1;
    filter: brightness(5.5);
  }
}

/* Helper mix: small realistic stars - 25% stars, 75% background */
.stars {
  background-image: 
    /* Small realistic stars using radial gradients */ radial-gradient(
      2px 2px at 8% 15%,
      rgba(255, 255, 255, 1) 0%,
      rgba(255, 255, 255, 0.8) 30%,
      transparent 60%
    ),
    radial-gradient(
      1.5px 1.5px at 25% 35%,
      rgba(255, 255, 255, 1) 0%,
      rgba(255, 255, 255, 0.6) 25%,
      transparent 50%
    ),
    radial-gradient(
      3px 3px at 45% 8%,
      rgba(255, 255, 255, 1) 0%,
      rgba(255, 255, 255, 0.7) 35%,
      transparent 65%
    ),
    radial-gradient(
      2.5px 2.5px at 65% 55%,
      rgba(255, 255, 255, 1) 0%,
      rgba(255, 255, 255, 0.8) 30%,
      transparent 60%
    ),
    radial-gradient(
      1.8px 1.8px at 85% 25%,
      rgba(255, 255, 255, 1) 0%,
      rgba(255, 255, 255, 0.6) 25%,
      transparent 50%
    ),
    radial-gradient(
      2.2px 2.2px at 15% 75%,
      rgba(255, 255, 255, 1) 0%,
      rgba(255, 255, 255, 0.7) 30%,
      transparent 55%
    ),
    radial-gradient(
      3.5px 3.5px at 35% 85%,
      rgba(255, 255, 255, 1) 0%,
      rgba(255, 255, 255, 0.8) 35%,
      transparent 65%
    ),
    radial-gradient(
      1.2px 1.2px at 55% 15%,
      rgba(255, 255, 255, 1) 0%,
      rgba(255, 255, 255, 0.5) 20%,
      transparent 45%
    ),
    radial-gradient(
      2.8px 2.8px at 75% 65%,
      rgba(255, 255, 255, 1) 0%,
      rgba(255, 255, 255, 0.7) 30%,
      transparent 60%
    ),
    radial-gradient(
      1.5px 1.5px at 95% 45%,
      rgba(255, 255, 255, 1) 0%,
      rgba(255, 255, 255, 0.6) 25%,
      transparent 50%
    ),
    radial-gradient(
      2.3px 2.3px at 5% 45%,
      rgba(255, 255, 255, 1) 0%,
      rgba(255, 255, 255, 0.7) 30%,
      transparent 55%
    ),
    radial-gradient(
      1.8px 1.8px at 95% 85%,
      rgba(255, 255, 255, 1) 0%,
      rgba(255, 255, 255, 0.6) 25%,
      transparent 50%
    );
  background-repeat: repeat;
  background-size: 100% 100%;
  mask-image: radial-gradient(
    circle at 50% 50%,
    black 65%,
    transparent 100%
  ); /* fade edges */
}

/* Parallax per layer + different twinkle - NO CURSOR TRACKING */
.stars-deep {
  transform: none; /* Remove cursor tracking */
  opacity: 0.9;
  animation: twinkleA 6s ease-in-out infinite alternate;
  filter: blur(0px); /* Remove blur for sharp stars */
}
.stars-mid {
  transform: none; /* Remove cursor tracking */
  opacity: 0.95;
  animation: twinkleB 5.5s ease-in-out infinite alternate;
}
.stars-near {
  transform: none; /* Remove cursor tracking */
  opacity: 1;
  animation: twinkleC 5s ease-in-out infinite alternate;
  filter: drop-shadow(0 0 4px rgba(255, 255, 255, 0.8));
}

/* ---------- Nebula / Galaxy swirl (soft, volumetric feel) ---------- */
@keyframes swirl {
  from {
    transform: rotate(0deg) scale(1.05);
  }
  to {
    transform: rotate(360deg) scale(1.05);
  }
}
.nebula {
  background: conic-gradient(
    from 10deg at 58% 60%,
    rgba(155, 105, 255, 0.12),
    rgba(255, 195, 175, 0.1),
    rgba(90, 160, 255, 0.1),
    rgba(155, 105, 255, 0.12)
  );
  filter: blur(48px) saturate(1.15);
  mix-blend-mode: screen;
  transform-origin: 58% 60%;
  animation: swirl 110s linear infinite;
  opacity: 0.75;
}

/* ---------- Center glow behind sun (depth anchor) ---------- */
.sun-glow {
  background: radial-gradient(
    340px 340px at 50% 50%,
    rgba(255, 180, 90, 0.22) 0%,
    rgba(255, 140, 50, 0.12) 25%,
    rgba(255, 120, 40, 0.05) 45%,
    rgba(255, 110, 30, 0.02) 60%,
    rgba(255, 110, 30, 0) 70%
  );
  filter: blur(6px);
  mix-blend-mode: screen;
  opacity: 0.9;
}

/* ---------- Vignette + grain (kills banding, adds cinematic depth) ---------- */
.vignette {
  background: radial-gradient(
    1100px 700px at 50% 50%,
    rgba(0, 0, 0, 0) 55%,
    rgba(0, 0, 0, 0.35) 100%
  );
  pointer-events: none;
}
@keyframes grainShift {
  from {
    background-position: 0 0;
  }
  to {
    background-position: 200% 0;
  }
}
.grain {
  background-image: repeating-linear-gradient(
    90deg,
    rgba(255, 255, 255, 0.006) 0 2px,
    rgba(0, 0, 0, 0.006) 2px 4px
  );
  mix-blend-mode: overlay;
  opacity: 0.5;
  animation: grainShift 9s linear infinite;
}

/* Respect reduced motion */
@media (prefers-reduced-motion: reduce) {
  .stars-deep,
  .stars-mid,
  .stars-near {
    animation: none;
  }
  .nebula {
    animation: none;
  }
  .grain {
    animation: none;
  }
}

/* Modal surface safety overrides - prevent any circular masking */
.modal-surface,
[role="dialog"][aria-modal="true"] {
  -webkit-mask: none !important;
  mask: none !important;
  clip-path: none !important;
  border-radius: 16px !important;
}

/* Video Game Style Modal Animations */
@keyframes modal-enter {
  0% {
    opacity: 0;
    transform: scale(0.8) translateY(-20px);
  }
  100% {
    opacity: 1;
    transform: scale(1) translateY(0);
  }
}

.animate-modal-enter {
  animation: modal-enter 0.3s ease-out;
}

/* Custom Scrollbar for Modal */
.custom-scrollbar {
  scrollbar-width: thin;
  scrollbar-color: rgba(34, 211, 238, 0.5) rgba(15, 23, 42, 0.3);
}

.custom-scrollbar::-webkit-scrollbar {
  width: 8px;
}

.custom-scrollbar::-webkit-scrollbar-track {
  background: rgba(15, 23, 42, 0.3);
  border-radius: 4px;
}

.custom-scrollbar::-webkit-scrollbar-thumb {
  background: rgba(34, 211, 238, 0.5);
  border-radius: 4px;
  transition: background 0.2s ease;
}

.custom-scrollbar::-webkit-scrollbar-thumb:hover {
  background: rgba(34, 211, 238, 0.7);
}

/* Modal backdrop blur effect */
.modal-backdrop {
  backdrop-filter: blur(8px);
  -webkit-backdrop-filter: blur(8px);
}
