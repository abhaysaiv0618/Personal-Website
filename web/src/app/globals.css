@import "tailwindcss";

:root {
  --background: #ffffff;
  --foreground: #171717;
}

@theme inline {
  --color-background: var(--background);
  --color-foreground: var(--foreground);
  --font-sans: var(--font-geist-sans);
  --font-mono: var(--font-geist-mono);
}

@media (prefers-color-scheme: dark) {
  :root {
    --background: #0a0a0a;
    --foreground: #ededed;
  }
}

body {
  background: var(--background);
  color: var(--foreground);
  font-family: Arial, Helvetica, sans-serif;
}

.purple-space {
  background: radial-gradient(
      1200px 800px at 50% 0%,
      rgba(124, 58, 237, 0.15),
      transparent 60%
    ),
    radial-gradient(
      900px 600px at 10% 80%,
      rgba(147, 51, 234, 0.12),
      transparent 60%
    ),
    radial-gradient(
      900px 600px at 90% 70%,
      rgba(99, 102, 241, 0.12),
      transparent 60%
    ),
    linear-gradient(135deg, #0a0a0a 0%, #1a1a2e 50%, #16213e 100%);
  position: relative;
  overflow: hidden;
}

/* Twinkling stars background */
.purple-space::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-image: radial-gradient(2px 2px at 20px 30px, #eee, transparent),
    radial-gradient(2px 2px at 40px 70px, rgba(255, 255, 255, 0.8), transparent),
    radial-gradient(1px 1px at 90px 40px, #fff, transparent),
    radial-gradient(
      1px 1px at 130px 80px,
      rgba(255, 255, 255, 0.6),
      transparent
    ),
    radial-gradient(2px 2px at 160px 30px, #fff, transparent),
    radial-gradient(
      1px 1px at 200px 90px,
      rgba(255, 255, 255, 0.7),
      transparent
    ),
    radial-gradient(1px 1px at 250px 50px, #fff, transparent),
    radial-gradient(
      2px 2px at 300px 20px,
      rgba(255, 255, 255, 0.8),
      transparent
    ),
    radial-gradient(1px 1px at 350px 80px, #fff, transparent),
    radial-gradient(
      1px 1px at 400px 40px,
      rgba(255, 255, 255, 0.6),
      transparent
    ),
    radial-gradient(2px 2px at 450px 70px, #fff, transparent),
    radial-gradient(
      1px 1px at 500px 30px,
      rgba(255, 255, 255, 0.7),
      transparent
    ),
    radial-gradient(1px 1px at 550px 90px, #fff, transparent),
    radial-gradient(
      2px 2px at 600px 50px,
      rgba(255, 255, 255, 0.8),
      transparent
    ),
    radial-gradient(1px 1px at 650px 20px, #fff, transparent),
    radial-gradient(
      1px 1px at 700px 80px,
      rgba(255, 255, 255, 0.6),
      transparent
    ),
    radial-gradient(2px 2px at 750px 40px, #fff, transparent),
    radial-gradient(
      1px 1px at 800px 70px,
      rgba(255, 255, 255, 0.7),
      transparent
    ),
    radial-gradient(1px 1px at 850px 30px, #fff, transparent),
    radial-gradient(
      2px 2px at 900px 90px,
      rgba(255, 255, 255, 0.8),
      transparent
    );
  background-repeat: repeat;
  background-size: 950px 100px;
  animation: twinkle 4s ease-in-out infinite alternate;
  pointer-events: none;
}

@keyframes twinkle {
  0% {
    opacity: 0.3;
  }
  50% {
    opacity: 0.8;
  }
  100% {
    opacity: 0.4;
  }
}

/* Star-shaped nodes */
.star-node {
  background: radial-gradient(
      circle at 30% 30%,
      rgba(255, 255, 255, 0.8),
      transparent 50%
    ),
    radial-gradient(
      circle at 70% 70%,
      rgba(255, 255, 255, 0.6),
      transparent 50%
    ),
    linear-gradient(45deg, #ffd700, #ffed4e, #ffd700);
  border: 2px solid rgba(255, 255, 255, 0.3);
  box-shadow: 0 0 20px rgba(255, 215, 0, 0.4),
    inset 0 0 20px rgba(255, 255, 255, 0.2);
  position: relative;
  overflow: hidden;
}

.star-node::before {
  content: "";
  position: absolute;
  top: 50%;
  left: 50%;
  width: 100%;
  height: 100%;
  background: radial-gradient(
      circle at 20% 20%,
      rgba(255, 255, 255, 0.6),
      transparent 30%
    ),
    radial-gradient(
      circle at 80% 80%,
      rgba(255, 255, 255, 0.4),
      transparent 30%
    );
  transform: translate(-50%, -50%);
  animation: star-shimmer 2s ease-in-out infinite alternate;
}

@keyframes star-shimmer {
  0% {
    opacity: 0.3;
  }
  100% {
    opacity: 0.8;
  }
}

/* Brightness animation for spinning stars */
.star-node.spinning {
  animation: star-brightness 0.5s ease-in-out infinite alternate;
}

@keyframes star-brightness {
  0% {
    filter: brightness(1) drop-shadow(0 0 15px rgba(255, 215, 0, 0.8));
  }
  100% {
    filter: brightness(2) drop-shadow(0 0 40px rgba(255, 215, 0, 1));
  }
}

/* Home star (center) - larger and more prominent */
.star-node.home {
  background: radial-gradient(
      circle at 30% 30%,
      rgba(255, 255, 255, 0.9),
      transparent 50%
    ),
    radial-gradient(
      circle at 70% 70%,
      rgba(255, 255, 255, 0.7),
      transparent 50%
    ),
    linear-gradient(45deg, #ff6b35, #ffd700, #ff6b35);
  box-shadow: 0 0 30px rgba(255, 107, 53, 0.6), 0 0 60px rgba(255, 215, 0, 0.4),
    inset 0 0 30px rgba(255, 255, 255, 0.3);
}

.star-node.home::before {
  background: radial-gradient(
      circle at 20% 20%,
      rgba(255, 255, 255, 0.8),
      transparent 30%
    ),
    radial-gradient(
      circle at 80% 80%,
      rgba(255, 255, 255, 0.6),
      transparent 30%
    );
}

@keyframes caret {
  50% {
    opacity: 0;
  }
}
.motion-safe\:animate-caret {
  animation: caret 1s steps(1) infinite;
}

.glow {
  text-shadow: 0 6px 24px rgba(124, 58, 237, 0.35),
    0 2px 8px rgba(0, 0, 0, 0.35);
}

/* Radial reveal utilities */
.radial-container {
  position: relative;
}

/* The hero element will carry this class + a data-state attribute */
.radial-reveal {
  /* Circle set via CSS custom properties; default tiny */
  clip-path: circle(
    var(--reveal-r, 0px) at var(--reveal-x, 50%) var(--reveal-y, 50%)
  );
  transition: clip-path 560ms cubic-bezier(0.2, 0.7, 0.2, 1), opacity 240ms ease;
  /* --- Radial reveal performance hint --- */
  will-change: clip-path, opacity;
}

/* Visibility by state */
.radial-reveal[data-state="graph"] {
  opacity: 0;
  pointer-events: none;
}
.radial-reveal[data-state="revealing"] {
  opacity: 1;
}
.radial-reveal[data-state="revealing"] .hero-content {
  opacity: 0 !important;
  visibility: hidden;
  transition: none;
}
.radial-reveal[data-state="hero"] {
  clip-path: none; /* fully revealed */
  opacity: 1;
}
.radial-reveal[data-state="hero"] .hero-content {
  opacity: 1 !important;
  visibility: visible;
  transition: opacity 300ms ease-in-out;
}

/* Reduce-motion: no animation, show immediately */
@media (prefers-reduced-motion: reduce) {
  .radial-reveal {
    transition: none !important;
    clip-path: none !important;
  }
  .radial-reveal .hero-content {
    transition: none !important;
    opacity: 1 !important;
  }
}

/* Loading effect for smooth transitions */
.loading-overlay {
  position: absolute;
  inset: 0;
  background: radial-gradient(
    circle at var(--reveal-x, 50%) var(--reveal-y, 50%),
    rgba(124, 58, 237, 0.1) 0%,
    transparent 70%
  );
  pointer-events: none;
  z-index: 15;
  opacity: 0;
  transition: opacity 200ms ease;
}

.loading-overlay.active {
  opacity: 1;
}

/* Satellites spin animation
   We apply the class 'satellites-spin-<key>' to the satellites container to restart this animation. */
[class*="satellites-spin-"] {
  transform: rotate(0deg);
  animation: satellites-spin 600ms cubic-bezier(0.2, 0.7, 0.2, 1);
}

@keyframes satellites-spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

/* Graph wheel animation
   We apply the class 'spin-<key>' to the wheel to restart this animation. */
.graph-wheel {
  transform: rotate(0deg);
  transform-origin: 50% 50%;
}

/* Unique selector per key guarantees reflow + restart */
[class*="spin-"].graph-wheel {
  animation: graph-wheel-spin 600ms cubic-bezier(0.2, 0.7, 0.2, 1);
}

@keyframes graph-wheel-spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

/* Respect reduced motion */
@media (prefers-reduced-motion: reduce) {
  [class*="spin-"].graph-wheel {
    animation: none !important;
  }
}
